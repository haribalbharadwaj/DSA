Given an m x n matrix mat, return an array of all the elements of the array in a diagonal order.

Example 1:
Input: mat = [[1,2,3],[4,5,6],[7,8,9]]
Output: [1,2,4,7,5,3,6,8,9]
Example 2:

Input: mat = [[1,2],[3,4]]
Output: [1,2,3,4]
 

Constraints:

m == mat.length
n == mat[i].length
1 <= m, n <= 104
1 <= m * n <= 104
-105 <= mat[i][j] <= 105




class Solution {
    public int[] findDiagonalOrder(int[][] mat) {
        int n= mat.length, m=mat[0].length;
        int[] ans = new int[n*m];
        int index=0,i=0,j=0;
        String dir = "dur";
        while(index<ans.length){
            ans[index] = mat[i][j];
            index++;
            if(dir.equals("dur")){
                if(j==m-1){
                    dir = "ddl";
                    i++;
                }else if(i==0){
                   dir = "ddl";
                   j++;
                }else{
                    i--;
                    j++;
                }
            }else{
                if(i==n-1){
                    dir = "dur";
                    j++;
                }else if(j==0){
                    dir = "dur";
                    i++;
                }else{
                    i++;
                    j--;
                }
            }
        }
        return ans;
        
    }
}
